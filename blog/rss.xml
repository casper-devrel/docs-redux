<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Casper Docs - Redux Blog</title>
        <link>https://casper-devrel.github.io/blog/</link>
        <description>Casper Docs - Redux Blog</description>
        <lastBuildDate>Tue, 20 Aug 2024 18:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[validator rewards in Casper 2.0]]></title>
            <link>https://casper-devrel.github.io/blog/condor-validator-rewards/</link>
            <guid>https://casper-devrel.github.io/blog/condor-validator-rewards/</guid>
            <pubDate>Tue, 20 Aug 2024 18:00:00 GMT</pubDate>
            <description><![CDATA[A discussion of validator rewards under Casper 2.0]]></description>
            <content:encoded><![CDATA[<p>In this post we discuss the changes to validator rewards in Casper v2.0.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="economics-of-consensus">Economics of consensus<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#economics-of-consensus" class="hash-link" aria-label="Direct link to Economics of consensus" title="Direct link to Economics of consensus">​</a></h2>
<p>Proof of Stake consensus protocols explicitly impose an assumption that a critical portion of the validator set, by weight, remains honest. Normally, just as it is in Highway and will be in Zug, there is a requirement that at least 2/3 of the weight remain honest for the chain to continue to operate normally.</p>
<p>Proof of Stake protocols do not typically describe the particular incentives that should keep validators honest, however, so some incentive scheme must be independently developed to ensure that the assumptions of the safety and liveness theorems actually hold. Such a scheme may directly reward some measure of performance within the protocol model, but an alternative model can choose to reward consensus-independent measures of chain performance, such as chain progress.</p>
<p>Incentive rewards in Casper come from issuance of new token at the end of each era, with quantity derived from an inflation parameter in the chainspec. The minted token are distributed in proportion to weight, assuming nominal performance of the chain.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="casper-1x-highway-specific-incentives">Casper 1.X Highway-specific incentives<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#casper-1x-highway-specific-incentives" class="hash-link" aria-label="Direct link to Casper 1.X Highway-specific incentives" title="Direct link to Casper 1.X Highway-specific incentives">​</a></h2>
<p>The 1.0 rewards scheme introduced with Highway on mainnet is directly tied to the details of Highway consensus. Rewards are maximized when all validators regularly send messages necessary to finalize a block within a time limit in a particular round.</p>
<p>Degrading platform performance by delaying block finalization is disadvantageous for all validators, even those not directly responsible for the delay, which is a means of aligning validator incentives with each other by discouraging censorship of consensus messages produced by others.</p>
<p>The weakness of the 1.0 rewards model is that it is difficult to understand and maintain. Additionally, by focusing on a consensus-specific measure of performance, it does not directly incentivize the observable outcome that we actually care about, which is public knowledge of block finality.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="casper-20">Casper 2.0<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#casper-20" class="hash-link" aria-label="Direct link to Casper 2.0" title="Direct link to Casper 2.0">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="public-knowledge-of-finality">Public knowledge of finality<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#public-knowledge-of-finality" class="hash-link" aria-label="Direct link to Public knowledge of finality" title="Direct link to Public knowledge of finality">​</a></h3>
<p>A necessary outcome of a safe consensus process over possible histories of the chain is that all honest validators should have at least mutual knowledge of the canonical history. That is, each honest validator should believe that a particular history is the correct one, and this history should be the same for all validators.</p>
<p>This mutual knowledge is sufficient for validators to make further progress in building up the canonical history. However, for a user of the blockchain, establishing confidence in the correct operation of the protocol and the identity of the canonical history requires that the validators' knowledge of the canonical history be attested publicly.</p>
<p>In Casper, validators create and distribute finality signatures, which are cryptographically secure witnesses of their belief in the finality of a particular block. Under 1.X, however, these are not easily verifiable by users and play no role in the reward mechanism, despite being a critical tool for building user confidence in the canonical history. In 2.0, we propose to allocate rewards for creation and publication of one's own and other validators' finality signatures.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="design">Design<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#design" class="hash-link" aria-label="Direct link to Design" title="Direct link to Design">​</a></h3>
<p>Rewards that promote public knowledge of finality naturally suggest rewarding publicly observable behaviors, rather than metrics only readily visible to the consensus component. This, together with the expected transition from Highway to Zug, naturally led to a system that rewards three publicly observable activities</p>
<ul>
<li>Block proposal</li>
<li>Signature creation</li>
<li>Signature publication</li>
</ul>
<p>Note that we expect very little, if any, rewards to be allocated for block proposals on mainnet, but the feature remains available.</p>
<p>The rewards apportioned to a block, under nominal operating conditions, are the same as they are under 1.X, that is, they amount to total supply at last era's end multiplied by an inflation factor derived from the chainspec. "Nominal" here means that all rounds result in a finalized block and that all finality signatures are collected and published.</p>
<p>The rewards are apportioned to these three activities based on chainspec settings governing the split between block proposals and signature rewards, and, within signature rewards, between finality signature creation and publication.</p>
<p>Note that this split ensures that validators' incentives are aligned, in the sense that other validators' correct operation is beneficial for each validator. This is because each validator is rewarded for publishing other validators' signature, and because each validator benefits from other publishing its own signatures.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="expected-rewards--volatility">Expected rewards &amp; volatility<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#expected-rewards--volatility" class="hash-link" aria-label="Direct link to Expected rewards &amp; volatility" title="Direct link to Expected rewards &amp; volatility">​</a></h4>
<p>Under nominal operating conditions, the total rewards for each validator will be proportional to weight in the long run. Depending on the particular values of the parameters governing the split between the three components of the rewards, short-run rewards can be more or less variable.</p>
<p>In the long run, with a stable validator set, each validator eventually produces a number of blocks proportional to its weight. Small validators can do months between producing a block, and will experience variable wait times between such occasions. However, each validator is supposed to produce signatures for each finalized block, so moving the allocation towards signature creation can reduce volatility.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="rewards-formula">Rewards formula<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#rewards-formula" class="hash-link" aria-label="Direct link to Rewards formula" title="Direct link to Rewards formula">​</a></h4>
<p>The rewards have three additive components, one for each observable activity we described in the previous section. The era rewards for a particular validator can be described using a simple formula, given below. Note that the formula does not exactly correspond to the actual on-chain calculation, for technical reasons we discuss in a further section.</p>
<p>Let us define some notation first</p>
<p><strong>N</strong> - expected number of blocks in an era</p>
<p><strong>N</strong>* - the <em>set</em> of observed blocks in an era</p>
<p><strong>R</strong> - total potential reward pot for the era (i.e., nominal inflation based on chainspec and current supply)</p>
<p><strong>r</strong> - fraction of reward pot dedicated to block production rewards</p>
<p><strong>f</strong> - finder's fee for finality signatures</p>
<p><strong>I</strong> - validator index set</p>
<p><strong>i</strong>: <strong>N</strong>* -&gt; {0,1} - indicator function for blocks produced by validator i (with abuse of notation)</p>
<p><strong>w</strong>: <strong>I</strong> -&gt; [0,1] - validator's weight</p>
<p><strong>W</strong> - total weight of the validator set</p>
<p><strong>S</strong>: <strong>N</strong>* -&gt; <strong>P(I)</strong> - set of validators associated with finality signatures for a particular observed block</p>
<p><strong>s_i</strong>: <strong>N</strong>* -&gt; {0,1} - indicator functions for existence of finality signatures associated with validator i for particular observed blocks</p>
<p>Now, we can use our defined symbols to concisely describe era rewards for a particular validator</p>
<p>Era rewards for validator i =</p>
<p><strong>Σ</strong> (n in <strong>N</strong>*) <strong>i(n)</strong> * (<strong>rR/N</strong>) (block production)</p>
<p>+ <strong>Σ</strong> (n in <strong>N</strong>*) <strong>i(n)</strong> * <strong>Σ</strong> (j in <strong>S(n)</strong>) (<strong>w(j)/W</strong>) * (<strong>f(1-r)R/N</strong>) (finality signature publication)</p>
<p>+ <strong>Σ</strong> (n in <strong>N</strong>*) <strong>s_i(n)</strong> * (<strong>w(i)/W</strong>) * (<strong>(1-f)(1-r)R/N</strong>) (finality signature contribution)</p>
<p>The meanings of the three additive components in the formula above are, in order</p>
<ul>
<li>Sum over blocks, discarding blocks not proposed by this validator
<ul>
<li>For each block, add the per-block reward allocation for block proposals from the total pot for the era</li>
</ul>
</li>
<li>Sum over blocks, discarding blocks not proposed by this validator
<ul>
<li>For each block, sum over published signatures
<ul>
<li>For each signature, add the per-block reward allocation for signature publication from the total pot for the era, weighing each signature by its creator's proportion of total validator weight</li>
</ul>
</li>
</ul>
</li>
<li>Sum over blocks, discarding those for which this validator did not create a signature
<ul>
<li>For each block, add the per-block reward allocation for signature creation from the total pot for the era, weighing it by the validator's proportion of total validator weight</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="notes-on-implementation">Notes on implementation<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#notes-on-implementation" class="hash-link" aria-label="Direct link to Notes on implementation" title="Direct link to Notes on implementation">​</a></h4>
<p>In a real network, messages arrive with a delay. This means that we cannot guarantee that all finality signatures for an era will arrive in time to be used by the rewards calculation carried out in the switch block.</p>
<p>We solve this problem by allowing publication of finality signatures for a preceding era. As long as the validator set stays unchanged, in the long run the formula above is a near-exact representation of rewards.</p>
<p>However, entry of new validators means that some of the publication rewards may be distributed among more validators than just those who participated in the era in which the signatures were created.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="impact-on-validator-revenue">Impact on validator revenue<a href="https://casper-devrel.github.io/blog/condor-validator-rewards/#impact-on-validator-revenue" class="hash-link" aria-label="Direct link to Impact on validator revenue" title="Direct link to Impact on validator revenue">​</a></h3>
<p>No impact is expected on average validator rewards under nominal operating conditions. Note that shortfall in signature creation, or network issues preventing the propagation of such signatures, can reduce rewards, even for validators who honestly publish all incoming signatures and honestly create signatures for each block. Additionally, allocating more rewards to block proposals or finality publication can make the rewards more volatile.</p>]]></content:encoded>
            <category>Condor</category>
            <category>validators</category>
        </item>
        <item>
            <title><![CDATA[Casper Docs Redux!]]></title>
            <link>https://casper-devrel.github.io/blog/welcome-docs-redux/</link>
            <guid>https://casper-devrel.github.io/blog/welcome-docs-redux/</guid>
            <pubDate>Thu, 15 Aug 2024 18:00:00 GMT</pubDate>
            <description><![CDATA[The first blog post using the new Docs portal.]]></description>
            <content:encoded><![CDATA[<p>Welcome to the new-look Casper documentation portal. We have put a lot of thought into making the documentation more accessible, easier to move around, and easier on the eye. We have stripped away some visual clutter to allow you to focus on the content, and introduced versioning so that you can compare versions to see what has changed. This is obviously with a mind to the Condor changeover, as we thought it made a lot of sense to allow you to move between versions of the docs as you upgrade your systems and applications for Casper v2.0.</p>
<p>Please enjoy and if you have any comments, suggestions or errata, please email <a href="mailto:devrel@casper.network" target="_blank" rel="noopener noreferrer">devrel@casper.network</a> with your contribution or query.</p>]]></content:encoded>
            <category>hello</category>
            <category>new docs</category>
            <category>docs-redux</category>
        </item>
        <item>
            <title><![CDATA[Addressable Entity in Casper 2.0]]></title>
            <link>https://casper-devrel.github.io/blog/addressable-entity/</link>
            <guid>https://casper-devrel.github.io/blog/addressable-entity/</guid>
            <pubDate>Wed, 17 Jul 2024 18:00:00 GMT</pubDate>
            <description><![CDATA[An introduction to the Addressable Entity concept.]]></description>
            <content:encoded><![CDATA[<p>Casper 2.0 introduces significant changes in the representation and management of accounts and smart contracts, through the introduction of the <code>AddressableEntity</code> type. This new structure replaces the separate <code>AccountHash</code> and <code>ContractHash</code> used in Casper 1.x, bringing a unified approach to interact with entities on the network. Contracts can now hold and manage funds directly through associated purses, similar to user accounts. They can also manage their own keys, enabling more sophisticated access control.</p>
<p>In this article, we'll dive into the details of <code>AddressableEntity</code>, exploring its structure and functionalities.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-concepts">Key Concepts<a href="https://casper-devrel.github.io/blog/addressable-entity/#key-concepts" class="hash-link" aria-label="Direct link to Key Concepts" title="Direct link to Key Concepts">​</a></h2>
<p><strong>AddressableEntity</strong></p>
<p>At its core, an <code>AddressableEntity</code> is a versatile data structure that represents both accounts and smart contracts within the Casper global state. It encapsulates all the necessary information for identifying and managing these entities. An <code>AddressableEntity</code> provides a unified interface for various operations, including authorization, access control, and execution of functions.</p>
<p><strong>EntityAddr</strong></p>
<p>An <code>EntityAddr</code> serves as the address for an <code>AddressableEntity</code>. It not only encodes the unique identifier (hash) of the entity but also its type. There are three distinct variants of <code>EntityAddr</code>:</p>
<ol>
<li><strong>System:</strong> Used for built-in, native contracts crucial for the blockchain's operation.</li>
<li><strong>Account:</strong>  Represents a user's account.</li>
<li><strong>SmartContract:</strong> Represents a user-deployed smart contract.</li>
</ol>
<p><strong>AddressableEntityHash</strong></p>
<p>The <code>AddressableEntityHash</code> is a newtype wrapper around a 32-byte hash (<code>HashAddr</code>). This hash functions as a unique identifier for the <code>AddressableEntity</code>, typically derived from either the account's public key or the smart contract's hash using hashing algorithm.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-inner-workings-of-addressableentity">The inner workings of AddressableEntity<a href="https://casper-devrel.github.io/blog/addressable-entity/#the-inner-workings-of-addressableentity" class="hash-link" aria-label="Direct link to The inner workings of AddressableEntity" title="Direct link to The inner workings of AddressableEntity">​</a></h2>
<p>Let's dive into the critical components within an <code>AddressableEntity</code>:</p>
<ul>
<li><strong><code>protocol_version</code> (ProtocolVersion):</strong>  This field indicates the protocol version that the entity is compatible with. It ensures backward compatibility and allows for smooth upgrades as the Casper network evolves.</li>
<li><strong><code>entity_kind</code> (EntityKind):</strong> As mentioned earlier, this enum determines the type of entity – System, Account, or SmartContract.</li>
<li><strong><code>associated_keys</code> (AssociatedKeys):</strong> This data structure stores a map of public keys authorized to interact with the entity. Each key is associated with a weight that represents its voting power in decision-making processes within the entity.</li>
<li><strong><code>action_thresholds</code> (ActionThresholds):</strong> These thresholds define the minimum combined weight of associated keys required to authorize specific actions. The three main action types are <code>deployment</code>, <code>key_management</code>, and <code>upgrade_management</code>. Each action type has its own weight threshold, allowing for fine-grained control over permissions.</li>
<li><strong><code>entry_points</code> (EntryPoints):</strong> This component is relevant only for smart contracts. It defines the functions (entry points) that external actors can call on the contract, along with their parameters, return types, and access permissions.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="obtaining-and-converting-keys">Obtaining and converting Keys<a href="https://casper-devrel.github.io/blog/addressable-entity/#obtaining-and-converting-keys" class="hash-link" aria-label="Direct link to Obtaining and converting Keys" title="Direct link to Obtaining and converting Keys">​</a></h2>
<p>In Casper 2.0, developers will primarily work with <code>Key::AddressableEntity</code> when referring to accounts and smart contracts. Here's how you can create them and convert between different key formats:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="creating-addressableentity-keys">Creating AddressableEntity Keys<a href="https://casper-devrel.github.io/blog/addressable-entity/#creating-addressableentity-keys" class="hash-link" aria-label="Direct link to Creating AddressableEntity Keys" title="Direct link to Creating AddressableEntity Keys">​</a></h3>
<p><strong>From Account Hash:</strong></p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> addressable_entity_key </span><span class="token operator">=</span><span class="token plain"> </span><span class="token class-name">Key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">AddressableEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">EntityAddr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">Account</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">account_hash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>From Smart Contract Hash:</strong></p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> addressable_entity_key </span><span class="token operator">=</span><span class="token plain"> </span><span class="token class-name">Key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">AddressableEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">EntityAddr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">SmartContract</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">contract_hash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="extracting-accounthash-or-contracthash-from-a-key">Extracting AccountHash or ContractHash from a Key<a href="https://casper-devrel.github.io/blog/addressable-entity/#extracting-accounthash-or-contracthash-from-a-key" class="hash-link" aria-label="Direct link to Extracting AccountHash or ContractHash from a Key" title="Direct link to Extracting AccountHash or ContractHash from a Key">​</a></h3>
<p>You can extract the <code>AccountHash</code> or <code>ContractHash</code> from a <code>Key::AddressableEntity</code> using pattern matching:</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">//For Accounts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> account_hash </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">match</span><span class="token plain"> addressable_entity_key </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token class-name">Key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">AddressableEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">EntityAddr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">Account</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">hash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> hash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    _ </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token macro property">panic!</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Not an account key"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">//For Contracts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> contract_hash </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">match</span><span class="token plain"> addressable_entity_key </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token class-name">Key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">AddressableEntity</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">EntityAddr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">::</span><span class="token class-name">SmartContract</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">hash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> hash</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    _ </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token macro property">panic!</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Not a contract key"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-address-merge-in-condor">The Address Merge in Condor<a href="https://casper-devrel.github.io/blog/addressable-entity/#the-address-merge-in-condor" class="hash-link" aria-label="Direct link to The Address Merge in Condor" title="Direct link to The Address Merge in Condor">​</a></h2>
<p>The "Address Merge" in the Condor upgrade of Casper is a foundational shift, impacting how accounts and smart contracts are identified and interacted with.</p>
<p><strong>Global State Transformation:</strong></p>
<p>Post-Condor, all accounts and smart contract addresses residing within the global state will be automatically migrated to the <code>AddressableEntity</code> structure. This means the network itself will recognize and handle these entities using the new format.</p>
<p><strong>Smart Contract Compatibility Considerations:</strong></p>
<p>While the global state automatically transitions to <code>AddressableEntity</code>, existing contracts are expected to function without any modification.</p>
<ul>
<li>
<p><strong>Caller Identification:</strong>
Existing host functions used to identify the caller within your contract will continue to work as before, ensuring no disruption to your contract's functionality. However, new host functions have been introduced that are specifically designed to work with the AddressableEntity format.</p>
</li>
<li>
<p><strong>External Contract Interaction:</strong> Other contracts may have updated their interfaces to accept AddressableEntity arguments. Its worth to verify the argument types to avoid potential errors.</p>
</li>
</ul>
<blockquote>
<p><strong>Note</strong></p>
<ul>
<li>Upgrading a contract to a newer version may involve complexities, such as changes to the contract's addressable hash. These changes might require coordination with centralized and decentralized exchanges, as well as communication with your community to ensure a smooth transition.</li>
</ul>
</blockquote>]]></content:encoded>
            <category>Condor</category>
        </item>
        <item>
            <title><![CDATA[Fee Elimination in Condor]]></title>
            <link>https://casper-devrel.github.io/blog/condor-fee-elimination/</link>
            <guid>https://casper-devrel.github.io/blog/condor-fee-elimination/</guid>
            <pubDate>Tue, 16 Jul 2024 22:00:00 GMT</pubDate>
            <description><![CDATA[A discussion of the Fee Elimination feature in Casper 2.0]]></description>
            <content:encoded><![CDATA[<p>The Casper 2.0 (aka Condor) network upgrade introduces new options to the way a Casper Network can be configured to handle gas consumption. Scheduled along with the release of Condor into Mainnet is a change in the configuration of the Casper Network to use a model known as <strong>Fee Elimination</strong> for gas payments. The purpose of this article is to introduce this model, and describe how Fee Elimination will affect the behavior of the Casper Network once Condor is released.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="concepts">Concepts<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#concepts" class="hash-link" aria-label="Direct link to Concepts" title="Direct link to Concepts">​</a></h2>
<p>Public distributed blockchain networks that support smart contracts generally employ a concept known as "<a href="https://docs.casper.network/concepts/glossary/G/#gas" target="_blank" rel="noopener noreferrer">gas</a>", which can be thought of as "the ability to do work on-chain". The problem addressed by this mechanism is that <strong>any finite resource on a publicly accessible computer network must be rate-limited</strong>, because a resource made available without limit is a denial of service attack vector.</p>
<p>Gas is acquired in finite quantities and used to meter and limit resource consumption by individual transactors. A transactor's available gas is consumed by their on-chain usage of computation, data storage, and possibly other chain-specific resources. The public Casper Network and its testnet have used such a gas model since their geneses.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="payment-gas-price-fees">Payment, Gas Price, Fees<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#payment-gas-price-fees" class="hash-link" aria-label="Direct link to Payment, Gas Price, Fees" title="Direct link to Payment, Gas Price, Fees">​</a></h2>
<p>On Casper 1.x, every transaction is subject to gas consumption. The transactor must specify an amount of token that is converted to gas and used to pay for execution. All gas consumed in each block is allotted to the <a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#proposer">proposer</a> of that block in the form of transaction <a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#fees">fees</a>. The model also includes tables to allow calculation of gas costs, and support for some portion of unconsumed gas to be refunded to transactors. We refer to these concepts using the following terms:</p>
<ul>
<li><strong>Gas Limit</strong>: An amount of gas, specified by the transactor, at which to cancel a transaction.</li>
<li><strong>Gas Price</strong>: The network gas price; the ratio between the cost of 1 unit of gas and 1 mote.</li>
<li><strong>Gas Cost</strong>: The amount of gas needed to pay for execution of a transaction.</li>
<li><strong>Payment</strong>: The amount of token specified by the transactor to pay for the execution of a transaction.</li>
<li><strong>Refund</strong>: All or a portion of the remaining token after gas is purchased for execution.</li>
</ul>
<blockquote>
<p>The Casper node software supports a number of configurable options which govern how gas may be calculated for a given transaction. A discussion of these is outside the scope of this article. This article is concerned with how these gas costs are dealt with, once calculated. Gas cost options will be the subject of another article.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fee-elimination">Fee Elimination<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#fee-elimination" class="hash-link" aria-label="Direct link to Fee Elimination" title="Direct link to Fee Elimination">​</a></h2>
<blockquote>
<p><strong>Fee Elimination is the strategy of placing temporary holds on transactor balances corresponding to their incurred gas costs, instead of taking those costs from their on-chain balances</strong>.</p>
</blockquote>
<p>Under 1.x, transactors must pay for gas directly from their purse balances. With Fee Elimination on Casper 2.0, a hold is placed on the calculated <strong>Gas Cost</strong> for a configurable period of time known as the <strong>Hold Period</strong>. Fees are therefore not forfeited by transactors, and funds are not spent to execute transactions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="holds">Holds<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#holds" class="hash-link" aria-label="Direct link to Holds" title="Direct link to Holds">​</a></h3>
<p>A hold may be thought of as a temporary freeze on some portion of the funds in an account. The funds never leave the purse upon which the hold is placed, but the owner of those funds may not spend them as long as the hold is in effect, and the funds held are not counted towards the available balance of that purse.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="hold-release">Hold Release<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#hold-release" class="hash-link" aria-label="Direct link to Hold Release" title="Direct link to Hold Release">​</a></h3>
<p>The Casper Node 2.0 software currently supports two hold release models: <strong>Accrued</strong> and <strong>Amortized</strong>.</p>
<blockquote>
<p>The Condor node architecture allows for any time-based function to be developed and used to calculate hold releases. However, for simplicity, this article will deal with the two currently available options.</p>
</blockquote>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="accrued">Accrued<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#accrued" class="hash-link" aria-label="Direct link to Accrued" title="Direct link to Accrued">​</a></h4>
<p>100% of the hold is held until the hold expires. At any given point in the duration of the hold, the effective amount of the hold is 100%. At expiry, all of the funds are again made available to the transactor.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="amortized">Amortized<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#amortized" class="hash-link" aria-label="Direct link to Amortized" title="Direct link to Amortized">​</a></h4>
<p>The effective amount of the hold is reduced linearly over the course of the hold duration. At any point in the duration of the hold, the effective hold <em>amount</em> is proportional to the percentage of the hold <em>duration</em> that remains before expiry.</p>
<p>For example, if:</p>
<ul>
<li>A hold of 180 CSPR is placed on an purse which holds 1000 CSPR</li>
<li>The configured hold period is 90 days</li>
<li>The hold release model is configured to use amortization</li>
</ul>
<p>Then, 9 days after the hold was placed, the current effective amount of the hold may be calculated by</p>
<ul>
<li>$\frac{\text{Hold Duration} - \text{Time Elapsed}}{\text{Hold Duration}} = \frac{90 - 9}{90} = 0.9$</li>
<li>Multiplied by the hold amount: $180 \times 0.9 = 162$</li>
</ul>
<p>The effective balance in that purse, at that point in time, is $1000 - 162 = 838 \ \text{CSPR}$</p>
<p>Over the course of the hold's duration, this calculation gives us:</p>



































<table><thead><tr><th>Hold Amount</th><th>Hold Period</th><th>Time Elapsed</th><th>Effective Hold</th></tr></thead><tbody><tr><td>180</td><td>90</td><td>1</td><td>178</td></tr><tr><td>180</td><td>90</td><td>9</td><td>162</td></tr><tr><td>180</td><td>90</td><td>45</td><td>90</td></tr><tr><td>180</td><td>90</td><td>89</td><td>2</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="more-about-gas-holds">More about Gas holds<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#more-about-gas-holds" class="hash-link" aria-label="Direct link to More about Gas holds" title="Direct link to More about Gas holds">​</a></h3>
<p>The duration of gas holds is defined <a href="https://github.com/casper-network/casper-node/blob/feat-2.0/resources/production/chainspec.toml#L166" target="_blank" rel="noopener noreferrer">here</a> in the <a href="https://github.com/casper-network/casper-node" target="_blank" rel="noopener noreferrer">casper-node</a> chainspec:</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># If fee_handling is set to 'no_fee', the system places a balance hold on the payer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># equal to the value the fee would have been. Such balance holds expire after a time</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># interval has elapsed. This setting controls how long that interval is. The available</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># balance of a purse equals its total balance minus the held amount(s) of non-expired</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># holds (see gas_hold_balance_handling setting for details of how that is calculated).</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">#</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># For instance, if gas_hold_interval is 24 hours and 100 gas is used from a purse,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># a hold for 100 is placed on that purse and is considered when calculating total balance</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># for 24 hours starting from the block_time when the hold was placed.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">gas_hold_interval = '24 hours'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="preventing-exploitation">Preventing Exploitation<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#preventing-exploitation" class="hash-link" aria-label="Direct link to Preventing Exploitation" title="Direct link to Preventing Exploitation">​</a></h3>
<p>The ultimate goal of any gas mechanism is to prevent exploitation of a network's resources. Aside from incentivizing validators, there is no fundamental reason to charge users for making transactions if their honesty can be guaranteed. By designing a system that disincentivizes wasteful transactions without charging a fee, resistance to exploitation can be maintained while allowing users to transact freely.</p>
<p>However, any gas mechanism that doesn't charge users could be vulnerable to denial-of-service attacks. Provided a large enough bankroll, a user could deploy enough transactions to slow the network for the amount of time needed for his or her previous gas payments to unlock, and use these unlocked funds to deploy more transactions, and thus repeat the process ad infinitum. In this way, one could theoretically deploy infinite transactions, cycling through their locked and unlocked balances.</p>
<p>Attacking the network in this way is a challenge of economic feasibility, much like many other aspects of blockchains. To prevent an attack like this from taking place, it must be made prohibitively expensive to mount such an attack, with little to no incentive to the attacker. Casper's approach involves using a long locking period, combined with 16 second blocktimes. The Casper 2.0 mainnet is slated to roll out with a 30 day locking period, but if increased, the cost to attack would scale linearly.</p>
<p>Considering a token locking period of 30 days and the <strong>Accrued</strong> unlocking schedule, purchasing just 1% of the total block space of each block would cost:</p>
<p>$\frac{T}{B} \cdot \frac{G}{100} = 5,346,000 , \text{CSPR}$</p>
<p>Where:</p>
<ul>
<li><code>T</code> = 30 day locking period</li>
<li><code>B</code> = 16 second blocktime</li>
<li><code>G</code> = 3300 CSPR block gas limit</li>
</ul>
<p>If this proves to be too cheap, the locking period can be extended or the block gas limit increased.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="opportunity-cost">Opportunity Cost<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#opportunity-cost" class="hash-link" aria-label="Direct link to Opportunity Cost" title="Direct link to Opportunity Cost">​</a></h4>
<p>In addition to the necessity to maintain large amounts of CSPR token in order to facilitate a DoS attack as laid out above, any prospective attacker would also incur the opportunity cost of being unable to use their CSPR for the duration of the hold period. Simply put, while their CSPR is locked up attacking the network, it cannot be used to earn rewards by staking. Given the amount of CSPR necessarily involved, and assuming any non-trivial potential annualized return on staking CSPR tokens, the ratio of opportunity cost of mounting such an attack versus the incentive to do so swiftly becomes prohibitively high.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="incentivizing-validators">Incentivizing Validators<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#incentivizing-validators" class="hash-link" aria-label="Direct link to Incentivizing Validators" title="Direct link to Incentivizing Validators">​</a></h3>
<p>The Casper Network, like any truly decentralized blockchain, allows nodes to act in their greatest economic interest when it comes to validating transactions. The purpose of this is to incentivize validators as much as possible, encouraging more to come online. Part of the income a validator earns comes from fees paid by a deployer, which entices validators to pick up their transactions. When no fee is paid by the deployer at all, however, another incentive must be provided to the validators.</p>
<p>Casper's solution is quite simple, but requires understanding how validators are selected and compensated. On Casper Networks, 100 validators are weightily selected to validate all the blocks within the current "<a href="https://docs.casper.network/concepts/glossary/E/#era" target="_blank" rel="noopener noreferrer">era</a>", which advances every 2 hours. At the end of each era, validator rewards are calculated, put into a pot, and distributed to validators based on the amount of token staked by each. Additionally, a "validator credit" is added to validators who propose populated blocks, proportional to the size of the blocks they propose. This validator credit is then applied to the payout scheme, awarding more of the pot to the hardest-working nodes. Additionally, the validator credit is considered as additional staking weight for the next era when the next <a href="https://docs.casper.network/concepts/glossary/B/#booking-block" target="_blank" rel="noopener noreferrer">booking block</a> appears.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-forward">Looking Forward<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#looking-forward" class="hash-link" aria-label="Direct link to Looking Forward" title="Direct link to Looking Forward">​</a></h2>
<p>By introducing Fee Elimination to the Casper Network, we hope to make transacting with the blockchain more accessible and less financially cumbersome. With this new model, interacting with smart contracts can become effectively free for users, inviting larger audiences to participate in new and exciting protocols.</p>
<p>As the model is rolled out to Casper's mainnet and testnet, economists and engineers will study its effects on Casper's transaction economy. The data observed will be used to devise proposals and improvements, need they be implemented.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="further-readingterms">Further Reading/Terms<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#further-readingterms" class="hash-link" aria-label="Direct link to Further Reading/Terms" title="Direct link to Further Reading/Terms">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="proposer">Proposer<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#proposer" class="hash-link" aria-label="Direct link to Proposer" title="Direct link to Proposer">​</a></h4>
<p>A validator proposing a block to the network for execution<br>
<a href="https://docs.casper.network/concepts/economics/consensus/" target="_blank" rel="noopener noreferrer">Consensus</a><br>
<a href="https://docs.casper.network/concepts/glossary/V/#validator" target="_blank" rel="noopener noreferrer">Validator</a></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="fees">Fees<a href="https://casper-devrel.github.io/blog/condor-fee-elimination/#fees" class="hash-link" aria-label="Direct link to Fees" title="Direct link to Fees">​</a></h4>
<p>A portion of a transaction's gas costs given over to the proposer of the block containing that transaction.<br>
<a href="https://docs.casper.network/concepts/economics/gas-concepts/" target="_blank" rel="noopener noreferrer">Gas Concepts</a><br>
<a href="https://docs.casper.network/runtime/" target="_blank" rel="noopener noreferrer">Runtime Economics</a><br>
<a href="https://docs.casper.network/concepts/glossary/R/#reward" target="_blank" rel="noopener noreferrer">Validator Rewards</a></p>]]></content:encoded>
            <category>Condor</category>
            <category>features</category>
            <category>tokenomics</category>
        </item>
        <item>
            <title><![CDATA[Setting Up a Local Casper Condor Network for Development]]></title>
            <link>https://casper-devrel.github.io/blog/condor-local-setup/</link>
            <guid>https://casper-devrel.github.io/blog/condor-local-setup/</guid>
            <pubDate>Tue, 16 Jul 2024 18:00:00 GMT</pubDate>
            <description><![CDATA[How to set up a local Casper Condor Network for Development using CCTL and the Rust Casper client.]]></description>
            <content:encoded><![CDATA[<p>Casper Condor is a major upgrade to the Casper Network. This guide walks you through creating a local Condor environment for testing and development using Dockerized NCTL and the Rust Casper Client.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://casper-devrel.github.io/blog/condor-local-setup/#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2>
<ul>
<li>Docker installed and running on your machine</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-1-the-dockerized-nctl-network-control-tool">Part 1: The Dockerized NCTL (Network Control Tool)<a href="https://casper-devrel.github.io/blog/condor-local-setup/#part-1-the-dockerized-nctl-network-control-tool" class="hash-link" aria-label="Direct link to Part 1: The Dockerized NCTL (Network Control Tool)" title="Direct link to Part 1: The Dockerized NCTL (Network Control Tool)">​</a></h2>
<p>NCTL is your tool for managing the Casper network. We'll use a Dockerized version for easier setup.</p>
<ol>
<li>
<p><strong>Clone the Repository:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">git clone https://github.com/make-software/casper-nctl-docker.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cd casper-nctl-docker</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>Switch to the Condor Branch:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">git checkout feat-2.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>Clone the <code>casper-node</code> Repository:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">git clone https://github.com/casper-network/casper-node.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cd casper-node</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">git checkout release-2.0.0-rc3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Ensure you're in the <code>casper-nctl-docker</code> directory when running this command</p>
</li>
<li>
<p><strong>Build the Docker Image:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">docker build -f casper-nctl-condor.Dockerfile -t casper-nctl:rc3 .</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This may take a while</p>
</li>
<li>
<p><strong>Verify the Image:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">docker image ls</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Look for the <code>casper-nctl:rc3</code> image in the output</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">REPOSITORY                 TAG        IMAGE ID       CREATED        SIZE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">casper-nctl                rc3        9fd1e7b25d42   40 hours ago   433MB</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>Start the NCTL Docker Container:</strong></p>
<ul>
<li>
<p><strong>Docker Compose (Recommended):</strong> If you're using the <code>docker-compose.yml</code> file, make sure that  the <code>image</code> under the <code>mynctl</code> service points to <code>casper-nctl:rc3</code>. Then run <code>docker-compose up</code>.</p>
</li>
<li>
<p><strong>Manual Docker Command:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">docker run -d --name mynctl -p 11101:11101 casper-nctl:rc3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Once it is up and running you should see that there are 5 nodes and 5 sidecars running and another 5 nodes and 5 sidecars that are inactive:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-1:casper-net-1-node-1       RUNNING   pid 996, uptime 0:00:03</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-1:casper-net-1-node-2       RUNNING   pid 998, uptime 0:00:03</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-1:casper-net-1-node-3       RUNNING   pid 1002, uptime 0:00:03</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-1:casper-net-1-sidecar-1    RUNNING   pid 997, uptime 0:00:03</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-1:casper-net-1-sidecar-2    RUNNING   pid 1000, uptime 0:00:03</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-1:casper-net-1-sidecar-3    RUNNING   pid 1011, uptime 0:00:03</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-2:casper-net-1-node-4       RUNNING   pid 1082, uptime 0:00:02</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-2:casper-net-1-node-5       RUNNING   pid 1084, uptime 0:00:02</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-2:casper-net-1-sidecar-4    RUNNING   pid 1083, uptime 0:00:02</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-2:casper-net-1-sidecar-5    RUNNING   pid 1085, uptime 0:00:02</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-node-10      STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-node-6       STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-node-7       STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-node-8       STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-node-9       STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-sidecar-10   STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-sidecar-6    STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-sidecar-7    STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-sidecar-8    STOPPED   Not started</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> casper-nctl  | validators-3:casper-net-1-sidecar-9    STOPPED   Not started</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="part-2-casper-client-rust">Part 2: Casper Client (Rust)<a href="https://casper-devrel.github.io/blog/condor-local-setup/#part-2-casper-client-rust" class="hash-link" aria-label="Direct link to Part 2: Casper Client (Rust)" title="Direct link to Part 2: Casper Client (Rust)">​</a></h2>
<p>To interact with your local Condor network, we'll use the Casper Client. You have two options for using the Casper Client:</p>
<p><strong>Option 1: Using the Casper Client from the Docker Image</strong></p>
<ul>
<li>The <code>casper-nctl:rc3</code> Docker image already includes the <code>casper-client</code>.</li>
<li>You can skip the next two steps if you want to use the pre-installed client.</li>
</ul>
<p><strong>Option 2: Using Your Local Casper Client</strong></p>
<ol>
<li>
<p><strong>Clone the Repository (Optional):</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">git clone https://github.com/casper-ecosystem/casper-client-rs.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cd casper-client-rs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>Switch to the Condor-Compatible Branch  (Optional):</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">git checkout feat-track-node-2.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>Activate NCTL scripts:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">source nctl-activate.sh casper-nctl</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<p>4 <strong>Test Your Setup:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">nctl-view-node-status</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This command should return the status of all the nodes running in your local network, indicating a successful setup. The output should look similar to this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">------------------------------------------------------------------------------------------------------------------------------------</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">2024-07-10T15:31:42.181535 [INFO] [2043] NCTL :: node #1 :: status:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"api_version": "2.0.0",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"peers": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "node_id": "tls:05b5..7b39",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "address": "127.0.0.1:22103"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "node_id": "tls:527e..37d2",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "address": "127.0.0.1:22105"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "node_id": "tls:b1d0..870f",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "address": "127.0.0.1:22102"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "node_id": "tls:dcdf..e348",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      "address": "127.0.0.1:22104"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"build_version": "2.0.0-d5c0d238f",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"chainspec_name": "casper-net-1",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"starting_state_root_hash": "2d92cf9f3ff3eb70f40be598b61cbf747c1b5ea67df9596d84a88c5458028a80",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"last_added_block_info": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "hash": "c1056e0e5978e725777f48e4488462d7794e6547f25b1fbcc4ba261ca2864395",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "timestamp": "2024-07-10T15:31:38.601Z",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "era_id": 19,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "height": 205,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "state_root_hash": "6c5502c3443f526e943fa5a5421349e938464c063c8dd0ada616c997e3805612",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "creator": "0190664e16a17594ed2d0e3c279c4cf5894e8db0da15e3b91c938562a1caae32ab"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">},</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"our_public_signing_key": "01fed662dc7f1f7af43ad785ba07a8cc05b7a96f9ee69613cfde43bc56bec1140b",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"round_length": "4s 96ms",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"next_upgrade": null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"uptime": "13m 15s",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"reactor_state": "Validate",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"last_progress": "2024-07-10T15:18:26.354Z",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"available_block_range": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "low": 0,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "high": 205</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">},</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"block_sync": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "historical": null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   "forward": null</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">},</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">"latest_switch_block_hash": "5192198c783ed8b66e206c37b34c5e268c84be2f4b78dd9899eecf5f37fb9f68"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="troubleshooting">Troubleshooting<a href="https://casper-devrel.github.io/blog/condor-local-setup/#troubleshooting" class="hash-link" aria-label="Direct link to Troubleshooting" title="Direct link to Troubleshooting">​</a></h2>
<p><strong>If sidecars or nodes are not running:</strong> If you see <code>null</code> values under each node in the output of <code>nctl-view-node-status</code>, it means the version of <code>casper-sidecar</code> is not compatible with the <code>casper-node</code>.</p>
<p><strong>Solution:</strong></p>
<ol>
<li>
<p>Go to the <code>casper-node/ci/ci.json</code> file.</p>
</li>
<li>
<p>Change the <code>casper-sidecar</code> branch under <code>external_deps</code> from:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">"branch": "feat-2.0"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>to:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">"branch": "release-1.0.0rc2_node-2.0.0rc3" </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is because the <code>casper-node</code> we are using is <code>release-2.0.0-rc3</code>. The required combination of versions of <code>casper-sidecar</code> and <code>casper-node</code> may change in the future (rc4 etc.).</p>
</li>
<li>
<p>Rebuild the NCTL image: <code>docker build -f casper-nctl-condor.Dockerfile -t casper-nctl:rc3 .</code></p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-the-casper-client">Using the Casper Client<a href="https://casper-devrel.github.io/blog/condor-local-setup/#using-the-casper-client" class="hash-link" aria-label="Direct link to Using the Casper Client" title="Direct link to Using the Casper Client">​</a></h2>
<ul>
<li><strong>Command Format(Using local casper-client):</strong> <code>cargo run --release [command] --node-address http://127.0.0.1:11101</code></li>
<li><strong>Command Format(Using casper-client from the docker image):</strong> <code>casper-client [command] --node-address http://127.0.0.1:11101</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="accessing-the-nctl-block-web-explorer">Accessing the NCTL Block Web Explorer<a href="https://casper-devrel.github.io/blog/condor-local-setup/#accessing-the-nctl-block-web-explorer" class="hash-link" aria-label="Direct link to Accessing the NCTL Block Web Explorer" title="Direct link to Accessing the NCTL Block Web Explorer">​</a></h2>
<p>The NCTL Docker setup includes a web-based block explorer.  You can access it in your browser at:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">http://127.0.0.1:8080</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This allows you to visually explore blocks, transactions, and other details of your local network.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="important-notes">Important Notes<a href="https://casper-devrel.github.io/blog/condor-local-setup/#important-notes" class="hash-link" aria-label="Direct link to Important Notes" title="Direct link to Important Notes">​</a></h2>
<ul>
<li><strong>Work in Progress:</strong> Condor compatibility is still evolving. Some features may be unstable or incomplete.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="additional-tips">Additional Tips<a href="https://casper-devrel.github.io/blog/condor-local-setup/#additional-tips" class="hash-link" aria-label="Direct link to Additional Tips" title="Direct link to Additional Tips">​</a></h2>
<ul>
<li><strong>Community Resources:</strong> Join the <a href="https://t.me/CSPRCondor" target="_blank" rel="noopener noreferrer">Casper Telegram</a> for help and discussion.</li>
</ul>]]></content:encoded>
            <category>Condor</category>
            <category>setup</category>
        </item>
    </channel>
</rss>