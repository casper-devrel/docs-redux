name: Production Build and Deploy

env:
    prod_pages_fqdn: ${{ vars.PROD_PAGES_FQDN }}
    selected_node_version: 21.6
    working_directory: ./build
    base_url: "http://staging.docs.casper.network"
    site_url: "http://staging.docs.casper.network"

on:
    push:
        branches:
            - main
    pull_request:
        types: [opened, reopened, synchronize]

jobs:
    backup:
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
              with:
                  ref: gh-pages

            - uses: actions/upload-artifact@v4
              with:
                  name: gh-pages-backup
                  path: .

    build:
      uses: ./.github/workflows/build.yml
      with:
            environment: production
            selected_node_version: 21.6
            base_url: "http://staging.docs.casper.network"
            site_url: "http://staging.docs.casper.network"

    validate-external-links:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ env.selected_node_version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.selected_node_version }}
                  cache: yarn

            - name: Yarn install
              run: |
                  yarn install

            - name: Validate external links
              run: |
                  yarn check:externals

    system-tests-predeployment:
        needs: build
        uses: ./.github/workflows/system-tests-predeployment.yml

    deploy-preview:
        if: github.event_name == 'pull_request'
        needs: [build]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/download-artifact@master
              with:
                  name: gh-pages-depl-payload
                  path: ./docs

            - name: Deploy to Netlify
              uses: nwtgck/actions-netlify@v2.1
              with:
                  publish-dir: "docs"
                  production-deploy: false
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  deploy-message: ${{ github.event.pull_request.title }}
                  enable-pull-request-comment: true
                  enable-commit-comment: false
                  enable-github-deployment: false
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.PREVIEW_NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.PREVIEW_NETLIFY_SITE_ID }}
              timeout-minutes: 1

    deploy-prod:
        if: ${{ github.ref == 'refs/heads/dev' && github.repository == 'casper-network/docs' }}
        needs: [backup, system-tests-predeployment]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/download-artifact@master
              with:
                  name: gh-pages-depl-payload
                  path: ./docs

            - name: Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@068dc23d9710f1ba62e86896f84735d869951305
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./docs

            - name: Wait some time to make sure deployment is finished
              run: |
                  sleep 60

    system-tests-postdeployment-prod:
        needs: deploy-prod
        runs-on: ubuntu-latest

        steps:
            - name: Test home page
              run: |
                  echo "Testing if homepage responds correctly"
                  curl --fail https://$prod_pages_fqdn
            - name: Test a random page
              run: |
                  echo "Testing if a page responds correctly"
                  curl --fail https://$prod_pages_fqdn/operators/setup-network/chain-spec
            - name: Test another random page
              run: |
                  echo "Testing if a page responds correctly"
                  curl --fail https://$prod_pages_fqdn/concepts/serialization-standard

    rollback-if-tests-fail-prod:
        if: ${{ always() && (needs.system-tests-postdeployment-prod.result=='failure') }}
        needs: system-tests-postdeployment-prod
        runs-on: ubuntu-latest

        steps:
            - uses: actions/download-artifact@master
              with:
                  name: gh-pages-backup
                  path: ./docs

            - name: Deploy the previous version to Github Pages
              uses: peaceiris/actions-gh-pages@068dc23d9710f1ba62e86896f84735d869951305
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./docs
