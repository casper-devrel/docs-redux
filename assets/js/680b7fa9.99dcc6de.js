"use strict";(self.webpackChunkcspr_docs=self.webpackChunkcspr_docs||[]).push([[2446],{2210:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>n,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>o});var t=r(4848),c=r(8453);const a={},n="Essential Rust Crates",i={id:"developers/essential-crates",title:"Essential Rust Crates",description:"Several Rust crates are available on crates.io to support smart contract development with Rust. A crate is a compilation unit that can be compiled into a binary or a library. The corresponding documentation is published on docs.rs. The most important crates are listed below.",source:"@site/docs/developers/essential-crates.md",sourceDirName:"developers",slug:"/developers/essential-crates",permalink:"/docs-redux/developers/essential-crates",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"developers",previous:{title:"Development Prerequisites",permalink:"/docs-redux/developers/prerequisites"},next:{title:"Introduction",permalink:"/docs-redux/writing-contracts"}},l={},o=[{value:"<code>casper-types</code>",id:"casper-types",level:2},{value:"<code>casper-contract</code>",id:"casper-contract",level:2},{value:"<code>casper-engine-test-support</code>",id:"casper-engine-test-support",level:2},{value:"<code>casper-node</code>",id:"casper-node",level:2},{value:"<code>casper-client</code>",id:"casper-client",level:2},{value:"<code>casper-event-standard</code>",id:"casper-event-standard",level:2},{value:"<code>casper-hashing</code>",id:"casper-hashing",level:2},{value:"<code>casper-wasm-utils</code>",id:"casper-wasm-utils",level:2},{value:"<code>cargo-casper</code>",id:"cargo-casper",level:2},{value:"Other Libraries",id:"other-libraries",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"essential-rust-crates",children:"Essential Rust Crates"}),"\n",(0,t.jsxs)(s.p,{children:["Several Rust crates are available on ",(0,t.jsx)(s.a,{href:"https://crates.io/",children:"crates.io"})," to support smart contract development with Rust. A crate is a compilation unit that can be compiled into a binary or a library. The corresponding documentation is published on ",(0,t.jsx)(s.a,{href:"https://docs.rs",children:"docs.rs"}),". The most important crates are listed below."]}),"\n",(0,t.jsx)(s.h2,{id:"casper-types",children:(0,t.jsx)(s.code,{children:"casper-types"})}),"\n",(0,t.jsx)(s.p,{children:"Types shared by many Casper crates:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-types",children:"https://crates.io/crates/casper-types"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-types/latest",children:"https://docs.rs/casper-types/latest"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"casper-contract",children:(0,t.jsx)(s.code,{children:"casper-contract"})}),"\n",(0,t.jsx)(s.p,{children:"A library for developing Casper smart contracts:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-contract",children:"https://crates.io/crates/casper-contract"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-contract/latest",children:"https://docs.rs/casper-contract/latest"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"casper-engine-test-support",children:(0,t.jsx)(s.code,{children:"casper-engine-test-support"})}),"\n",(0,t.jsx)(s.p,{children:"The Casper test support library:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-engine-test-support",children:"https://crates.io/crates/casper-engine-test-support"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-engine-test-support/",children:"https://docs.rs/casper-engine-test-support/"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"casper-node",children:(0,t.jsx)(s.code,{children:"casper-node"})}),"\n",(0,t.jsx)(s.p,{children:"The component for running a node on a Casper network:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-node",children:"https://crates.io/crates/casper-node"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-node/latest",children:"https://docs.rs/casper-node/latest"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"casper-client",children:(0,t.jsx)(s.code,{children:"casper-client"})}),"\n",(0,t.jsx)(s.p,{children:"A client library for interacting with a Casper network:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-client",children:"https://crates.io/crates/casper-client"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-client/latest",children:"https://docs.rs/casper-client/latest"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"casper-event-standard",children:(0,t.jsx)(s.code,{children:"casper-event-standard"})}),"\n",(0,t.jsx)(s.p,{children:"A Rust library that provides a simple and standardized way for Casper contracts to emit events:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-event-standard",children:"https://crates.io/crates/casper-event-standard"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-event-standard/latest",children:"https://docs.rs/casper-event-standard/latest"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"casper-hashing",children:(0,t.jsx)(s.code,{children:"casper-hashing"})}),"\n",(0,t.jsx)(s.p,{children:"A library providing hashing functionality including Merkle Proof utilities:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-hashing",children:"https://crates.io/crates/casper-hashing"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-hashing/latest/",children:"https://docs.rs/casper-hashing/latest/"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"casper-wasm-utils",children:(0,t.jsx)(s.code,{children:"casper-wasm-utils"})}),"\n",(0,t.jsx)(s.p,{children:"Command-line utilities and corresponding Rust API for producing pwasm-compatible executables:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/casper-wasm-utils",children:"https://crates.io/crates/casper-wasm-utils"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/casper-wasm-utils/latest",children:"https://docs.rs/casper-wasm-utils/latest"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"cargo-casper",children:(0,t.jsx)(s.code,{children:"cargo-casper"})}),"\n",(0,t.jsx)(s.p,{children:"A command line tool for creating a Wasm smart contract and tests:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/cargo-casper",children:"https://crates.io/crates/cargo-casper"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://docs.rs/crate/cargo-casper/latest",children:"https://docs.rs/crate/cargo-casper/latest"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"other-libraries",children:"Other Libraries"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.a,{href:"/docs-redux/resources/build-on-casper/casper-open-source-software",children:"Open-Source Software"})," page provides other community-curated tools and libraries."]})]})}function p(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>n,x:()=>i});var t=r(6540);const c={},a=t.createContext(c);function n(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);