"use strict";(self.webpackChunkcspr_docs=self.webpackChunkcspr_docs||[]).push([[1767],{96409:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var t=s(74848),r=s(28453);const c={},o="C",a={id:"concepts/glossary/C",title:"C",description:"---",source:"@site/docs/concepts/glossary/C.md",sourceDirName:"concepts/glossary",slug:"/concepts/glossary/C",permalink:"/next/concepts/glossary/C",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Mel Padden",lastUpdatedAt:1723745091e3,frontMatter:{},sidebar:"concepts",previous:{title:"B",permalink:"/next/concepts/glossary/B"},next:{title:"D",permalink:"/next/concepts/glossary/D"}},i={},l=[{value:"Cargo",id:"cargo",level:2},{value:"Casper network",id:"casper-network",level:2},{value:"CBC",id:"cbc",level:2},{value:"Chainspec",id:"chainspec",level:2},{value:"Consensus",id:"consensus",level:2},{value:"Contract runtime",id:"contract-runtime",level:2},{value:"Correct by construction",id:"correct-by-construction",level:2},{value:"Crate",id:"crate",level:2},{value:"CSPR",id:"cspr",level:2}];function h(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"c",children:"C"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/next/concepts/glossary/A",children:"A"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/B",children:"B"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/C",children:"C"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/D",children:"D"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/E",children:"E"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/F",children:"F"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/G",children:"G"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/H",children:"H"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/I",children:"I"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/J",children:"J"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/K",children:"K"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/L",children:"L"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/M",children:"M"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/N",children:"N"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/O",children:"O"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/P",children:"P"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/Q",children:"Q"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/R",children:"R"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/S",children:"S"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/T",children:"T"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/U",children:"U"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/V",children:"V"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/W",children:"W"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/X",children:"X"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/Y",children:"Y"})," ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/Z",children:"Z"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"cargo",children:"Cargo"}),"\n",(0,t.jsx)(n.p,{children:"Cargo is Rust's build system and package manager. This tool manages Rust projects, such as building code and downloading dependencies."}),"\n",(0,t.jsx)(n.h2,{id:"casper-network",children:"Casper network"}),"\n",(0,t.jsxs)(n.p,{children:["Casper is a Proof-of-Stake blockchain platform with an account-based model that performs execution after consensus. More information on the design of a Casper network can be found ",(0,t.jsx)(n.a,{href:"/next/concepts/design/casper-design",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"cbc",children:"CBC"}),"\n",(0,t.jsx)(n.p,{children:"Correct-by-construction (CBC) protocols are consensus protocols meeting the following properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All the nodes share the same proof of asynchronous liveness, which means that the protocol will continue to produce blocks at some interval."}),"\n",(0,t.jsx)(n.li,{children:"The consensus has mathematically provable safety, which means that once a block is committed, it cannot be reverted."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"chainspec",children:"Chainspec"}),"\n",(0,t.jsxs)(n.p,{children:["A collection of configuration settings describing the state of the system at genesis and upgrades to basic system functionality (including system contracts and gas costs) occurring after ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/G#genesis",children:"genesis"}),". Here is an example ",(0,t.jsx)(n.a,{href:"https://github.com/casper-network/casper-node/blob/release-1.5.2/resources/production/chainspec.toml",children:"chainspec"}),", which will change with newer releases."]}),"\n",(0,t.jsx)(n.h2,{id:"consensus",children:"Consensus"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/next/concepts/design/consensus",children:"Consensus"})," is an algorithm used to mandate agreement on the blockchain among all nodes. The blockchain, although being built in a decentralized way, eventually converges so that all nodes eventually agree on whether a given block is part of the chain or not. The algorithm for securing an agreement is what is known as ",(0,t.jsx)(n.em,{children:"consensus"}),". The consensus layer contains the algorithm, but the algorithm should not be confused with the consensus layer."]}),"\n",(0,t.jsx)(n.h2,{id:"contract-runtime",children:"Contract runtime"}),"\n",(0,t.jsxs)(n.p,{children:["Enables developers to use a seamless workflow for authoring and testing their ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/S#smart-contract",children:"smart contracts"}),". This environment can also be used for continuous integration, enabling Rust smart contracts to be managed using development best practices."]}),"\n",(0,t.jsx)(n.h2,{id:"correct-by-construction",children:"Correct by construction"}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/C#cbc",children:"CBC"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"crate",children:"Crate"}),"\n",(0,t.jsxs)(n.p,{children:["A compilation unit in Rust. A crate can be compiled into a binary or into a library. By default, ",(0,t.jsx)(n.em,{children:"rustc"}),", the compiler for the Rust programming language, will produce a binary from a crate."]}),"\n",(0,t.jsx)(n.h2,{id:"cspr",children:"CSPR"}),"\n",(0,t.jsxs)(n.p,{children:["CSPR is the Casper token pre-defined on the Casper Mainnet and used to pay for transaction execution and for ",(0,t.jsx)(n.a,{href:"/next/concepts/glossary/S#staking",children:"staking"})," (securing the network)."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(96540);const r={},c=t.createContext(r);function o(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);