"use strict";(self.webpackChunkcspr_docs=self.webpackChunkcspr_docs||[]).push([[5664],{47150:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>i,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var r=n(74848),c=n(28453);const t={},o="F",d={id:"concepts/glossary/F",title:"F",description:"---",source:"@site/docs/concepts/glossary/F.md",sourceDirName:"concepts/glossary",slug:"/concepts/glossary/F",permalink:"/docs-redux/next/concepts/glossary/F",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Karol Marter",lastUpdatedAt:1722798267e3,frontMatter:{},sidebar:"concepts",previous:{title:"E",permalink:"/docs-redux/next/concepts/glossary/E"},next:{title:"G",permalink:"/docs-redux/next/concepts/glossary/G"}},a={},l=[{value:"Finality",id:"finality",level:2},{value:"Fungible",id:"fungible",level:2}];function x(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"f",children:"F"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/A",children:"A"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/B",children:"B"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/C",children:"C"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/D",children:"D"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/E",children:"E"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/F",children:"F"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/G",children:"G"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/H",children:"H"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/I",children:"I"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/J",children:"J"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/K",children:"K"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/L",children:"L"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/M",children:"M"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/N",children:"N"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/O",children:"O"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/P",children:"P"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/Q",children:"Q"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/R",children:"R"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/S",children:"S"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/T",children:"T"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/U",children:"U"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/V",children:"V"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/W",children:"W"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/X",children:"X"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/Y",children:"Y"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/Z",children:"Z"})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"finality",children:"Finality"}),"\n",(0,r.jsxs)(s.p,{children:["See ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/B#block-finality",children:"block finality"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"fungible",children:"Fungible"}),"\n",(0,r.jsxs)(s.p,{children:["A fungible item possesses mutual interchangeability and may be replaced seamlessly with another, identical item. A fungible token standard is one in which all tokens are equivalent and interchangeable. In contrast to a ",(0,r.jsx)(s.a,{href:"/docs-redux/next/concepts/glossary/N#non-fungible-token",children:"non-fungible token"}),", where each token is unique and not interchangeable."]})]})}function i(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>d});var r=n(96540);const c={},t=r.createContext(c);function o(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);